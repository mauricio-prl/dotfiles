// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run the `open default settings` command
// from the command palette or from `Zed` application menu.
{
  "icon_theme": "Catppuccin Macchiato",
  "features": {
    "edit_prediction_provider": "zed"
    // "edit_prediction_provider": "copilot"
  },
  "agent": {
    "use_modifier_to_send": false,
    "default_profile": "ask",
    "play_sound_when_agent_done": true,
    "always_allow_tool_actions": true,
    "inline_assistant_model": {
      "provider": "copilot_chat",
      "model": "claude-sonnet-4"
    },
    "default_model": {
      "provider": "copilot_chat",
      "model": "claude-sonnet-4"
    }
  },
  "agent_servers": {
    "gemini": {
      "ignore_system_version": false
    }
  },
  "autosave": "on_window_change",
  "base_keymap": "VSCode",
  "buffer_font_family": "FiraCode Nerd Font",
  "buffer_font_size": 14.5,
  "cursor_shape": "hollow",
  "format_on_save": "on",
  // "format_on_save": "off",
  "formatter": "language_server",
  "git": {
    "blame": {
      "show_avatar": true
    }
  },
  "hard_tabs": false,
  "hide_mouse": "on_typing",
  "hover_popover_enabled": true,
  "line_indicator_format": "short",
  "preferred_line_length": 9999,
  "relative_line_numbers": true,
  "remove_trailing_whitespace_on_save": true,
  "show_whitespaces": "all",
  "soft_wrap": "none",
  "tab_size": 2,
  "theme": "Catppuccin Macchiato",
  "ui_font_family": "FiraCode Nerd Font",
  "vertical_scroll_margin": 10,
  "vim_mode": true,
  "indent_guides": {
    "enabled": false
  },
  "inlay_hints": {
    "enabled": true,
    "show_other_hints": true,
    "show_parameter_hints": false,
    "show_type_hints": false
  },
  "edit_predictions": {
    "disabled_globs": [],
    "mode": "eager"
  },
  "terminal": {
    "copy_on_select": true,
    "default_width": 1000,
    "dock": "bottom",
    "font_family": "FiraCode Nerd Font"
  },
  "wrap_guides": [
    100
  ],
  "lsp": {
    "ruby-lsp": {
      "initialization_options": {
        "enabledFeatures": {
          "diagnostics": false
        }
      }
    },
    "rubocop": {
      "initialization_options": {
        "safeAutocorrect": false
      }
    },
    "solargraph": {
      "binary": {
        "path": "/Users/mauriciolima/.asdf/shims/solargraph",
        "arguments": [
          "stdio"
        ]
      },
      "initialization_options": {
        "diagnostics": true,
        "formatting": true
      }
    },
    "elixir-ls": {
      "settings": {
        "dialyzerEnabled": false
      }
    }
  },
  "languages": {
    "Ruby": {
      "language_servers": [
        "ruby-lsp",
        "rubocop",
        "!solargraph",
        "!sorbet",
        "!steep",
        "..."
      ]
    },
    "Elixir": {
      "language_servers": [
        "next-ls",
        "!lexical",
        "!elixir-ls",
        "..."
      ]
      // "format_on_save": {
      //   "external": {
      //     "command": "mix",
      //     "arguments": [
      //       "format",
      //       "--stdin-filename",
      //       "{buffer_path}",
      //       "-"
      //     ]
      //   }
      // }
    },
    // "JavaScript": {
    //   "format_on_save": {
    //     "external": {
    //       "command": "prettier",
    //       "arguments": [
    //         "--stdin-filepath",
    //         "{buffer_path}"
    //       ]
    //     }
    //   }
    // },
    "TypeScript": {
      "format_on_save": {
        "external": {
          "command": "prettier",
          "arguments": [
            "--stdin-filepath",
            "{buffer_path}"
          ]
        }
      }
    },
    "Markdown": {
      "format_on_save": {
        "external": {
          "command": "prettier",
          "arguments": [
            "--stdin-filepath",
            "{buffer_path}"
          ]
        }
      }
    },
    "TSX": {
      "format_on_save": {
        "external": {
          "command": "prettier",
          "arguments": [
            "--stdin-filepath",
            "{buffer_path}"
          ]
        }
      }
    },
    "YAML": {
      "format_on_save": {
        "external": {
          "command": "prettier",
          "arguments": [
            "--stdin-filepath",
            "{buffer_path}"
          ]
        }
      }
    },
    "CSS": {
      "format_on_save": {
        "external": {
          "command": "prettier",
          "arguments": [
            "--stdin-filepath",
            "{buffer_path}"
          ]
        }
      }
    }
  }
}
